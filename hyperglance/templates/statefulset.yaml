apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "hyperglance.name" . }}
  labels:
    app: {{ template "hyperglance.name" . }}
    chart: {{ template "hyperglance.chart" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    {{- include "hyperglance.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ template "hyperglance.name" . }}
  replicas: {{ .Values.replicaCount }}
  serviceName: "hyperglance-svc"
  template:
    metadata:
      annotations:
        timestamp: {{ now | date "2006-01-02T15:04:05" }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        app: {{ template "hyperglance.name" . }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}        
    spec:
    {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- .Values.nodeSelector | toYaml | nindent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
        {{- .Values.affinity | toYaml | nindent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
        {{- .Values.tolerations | toYaml | nindent 8 }}
    {{- end }}
    {{ if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
    {{ else }}
    # CIS Control 5.1.5
      automountServiceAccountToken: false
    {{ end }}
    {{ if .Values.privateImageRepo.enabled }}
      imagePullSecrets:
      {{ if .Values.privateImageRepo.existingSecretName }}
      - name: {{ .Values.privateImageRepo.existingSecretName }}
      {{ else }}
      - name: {{ .Release.Name }}-repo-secret
      {{ end }}
    {{ end }}
      initContainers:
      - name: install
        image: {{ .Values.install.image }}:{{ .Values.install.tag }}
        {{ if .Values.install.enable_security_context }}
        securityContext: 
          {{- toYaml $.Values.install.securityContext | nindent 10 }}
        {{ end }}
        resources:
          {{- toYaml $.Values.install.resources | nindent 10 }}
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        {{ if .Values.customPostgres.enabled }}
        command: ['sh', '-c', '[ -d /mnt/data/rules ] && exit 0; mkdir -p /mnt/data/httpd_logs /mnt/data/wildfly_logs /mnt/data/mellon && touch /mnt/data/email.properties && echo "mail.smtp.auth=true" > /mnt/data/email.properties && echo "mail.smtp.starttls.enable=true" >> /mnt/data/email.properties && touch /mnt/data/hg.bin && cat /mnt/license/hg.bin > /mnt/data/hg.bin && mkdir -p /mnt/data/rules && chown -R 333: /mnt/data && chown root: /mnt/data/httpd_logs']
        {{ else if not .Values.customPostgres.enabled }}
        command: ['sh', '-c', '[ -d /mnt/data/rules ] && chown -R 333: /mnt/data && chown root: /mnt/data/httpd_logs && chown -R 222: /var/lib/pgsql && exit 0; mkdir -p /mnt/data/httpd_logs /mnt/data/wildfly_logs /mnt/data/mellon && touch /mnt/data/email.properties && echo "mail.smtp.auth=true" > /mnt/data/email.properties && echo "mail.smtp.starttls.enable=true" >> /mnt/data/email.properties && touch /mnt/data/hg.bin && cat /mnt/license/hg.bin > /mnt/data/hg.bin && mkdir -p /mnt/data/rules && chown -R 333: /mnt/data && chown root: /mnt/data/httpd_logs && mkdir -p /var/lib/pgsql/data && mkdir -p /var/lib/pgsql/logs && chown -R 222: /var/lib/pgsql']
        {{ end }}
        volumeMounts:
        - name: hyperglance-data
          mountPath: /mnt/data
          readOnly: false
        - name: license
          mountPath: /mnt/license/hg.bin
          subPath: hg.bin
        {{ if not .Values.customPostgres.enabled }}
        - name: postgresql-data
          mountPath: /var/lib/pgsql
          readOnly: false
        {{ end }}

      containers:
      {{ if not .Values.customPostgres.enabled }}
      - name: postgresql
        image: {{ .Values.postgresql.image | default "hyperglance/postgresql" }}:{{ .Values.postgresql.tag | default .Chart.AppVersion }}
        {{ if .Values.postgresql.enable_security_context }}
        securityContext:
          {{- toYaml $.Values.postgresql.securityContext | nindent 10 }}
        {{ end }}
        resources:
          {{- toYaml $.Values.postgresql.resources | nindent 10 }}
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/pgsql
          readOnly: false
        {{ if .Values.backend_dev.enabled }}
        ports:
        - containerPort: 5432
        {{ end }}
      {{ end }}

      - name: httpd
        image: {{ .Values.httpd.image | default "hyperglance/httpd" }}:{{ .Values.httpd.tag | default .Chart.AppVersion }}
        {{ if .Values.httpd.enable_security_context }}
        securityContext:
          {{- toYaml $.Values.httpd.securityContext | nindent 10 }}
        {{ end }}
        resources:
          {{- toYaml $.Values.httpd.resources | nindent 10 }}
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: "{{ .Release.Name }}-env"
        {{ if .Values.proxy.enabled }}
        - secretRef:
            name: "{{ .Release.Name }}-proxy-settings"
        {{ end }}

        volumeMounts:
        - name: httpd-ssl
          mountPath: /etc/httpd/ssl
          readOnly: true

        {{ if .Values.saml.enabled }}
        - name: httpd-saml
          mountPath: /etc/httpd/mellon
          readOnly: true
        {{ end }}

        - name: hyperglance-data
          mountPath: /var/log/httpd
          subPath: httpd_logs
          readOnly: false

      - name: wildfly
        image: {{ .Values.wildfly.image | default "hyperglance/wildfly" }}:{{ .Values.wildfly.tag | default .Chart.AppVersion }}
        {{ if .Values.wildfly.enable_security_context }}
        securityContext:
          {{- toYaml $.Values.wildfly.securityContext | nindent 10 }}
        {{ end }}
        resources:
          {{- toYaml $.Values.wildfly.resources | nindent 10 }}
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        {{ if .Values.bypassHttpd.enabled }}
        ports:
        - containerPort: {{ .Values.bypassHttpd.wildfly_http_port }}
        - containerPort: {{ .Values.bypassHttpd.wildfly_https_port }}
        {{ end }}
        envFrom:
        - configMapRef:
            name: "{{ .Release.Name }}-env"

        {{ if .Values.customPostgres.enabled }}
        - secretRef:
            {{ if .Values.customPostgres.existingSecretName }}
            name: {{ .Values.customPostgres.existingSecretName }}
            namespace: {{ .Values.customPostgres.existingSecretNamespace }}
            {{ else }}
            name: "{{ .Release.Name }}-custom-postgresql-db"
            {{ end }}
        {{ end }}
        {{ if .Values.proxy.enabled }}
        - secretRef:
            {{ if .Values.proxy.existingSecretName }}
            name: {{ .Values.proxy.existingSecretName }}
            namespace: {{ .Values.proxy.existingSecretNamespace }}
            {{ else }}
            name: "{{ .Release.Name }}-proxy-settings"
            {{ end }}
        {{ end }}

        volumeMounts:
        - name: hyperglance-data
          mountPath: /var/lib/hyperglance/rules
          subPath: rules
          readOnly: false

        - name: hyperglance-data
          mountPath: /opt/wildfly/standalone/data/hg.bin
          subPath: hg.bin
          readOnly: false

        {{ if not .Values.backend_dev.enabled }}
        - name: hyperglance-data
          mountPath: /opt/wildfly/standalone/deployments/hgs.ear/lib/common.jar/email.properties
          subPath: email.properties
          readOnly: false
        {{ end }}          

        - name: hyperglance-data
          mountPath: /opt/wildfly/standalone/log
          subPath: wildfly_logs
          readOnly: false

      {{ if .Values.frontend_dev.enabled }}
      - name: "{{ .Values.frontend_dev.image}}"
        image: "{{ .Values.frontend_dev.image}}:{{ .Values.frontend_dev.tag }}"
        ports:
        - containerPort: {{ .Values.frontend_dev.port }}
      {{ end }}

      volumes:
      {{ if not .Values.customPostgres.enabled }}
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: hyperglance-postgresql-data
      {{ end }}
      - name: httpd-ssl
        secret:
          {{ if .Values.httpdSSL.existingSecretName }}
          secretName: {{ .Values.httpdSSL.existingSecretName }}
          {{ else }}
          secretName: hyperglance-httpd-ssl
          {{ end }}
      {{ if .Values.proxy.enabled }}
      - name: proxy-settings
        secret:
          {{ if .Values.proxy.existingSecretName }}
          secretName: {{ .Values.proxy.existingSecretName }}
          {{ else }}
          secretName: hyperglance-proxy-settings
          {{ end }}
      {{ end }}
      {{ if .Values.saml.enabled }}
      - name: httpd-saml
        secret:
          {{ if .Values.saml.existingSecretName }}
          secretName: {{ .Values.saml.existingSecretName }}
          {{ else }}
          secretName: hyperglance-httpd-saml
          {{ end }}
      {{ end }}
      - name: hyperglance-data
        persistentVolumeClaim:
          claimName: hyperglance-data
      {{ if .Values.customPostgres.enabled }}
      - name: custom-postgres-db
        secret:
        {{ if .Values.customPostgres.existingSecretName }}
          secretName: {{ .Values.customPostgres.existingSecretName }}
        {{ else}}
          secretName: hyperglance-custom-postgresql-db
        {{ end }}
      {{ end }}
      - name: license
        secret:
          secretName: {{ .Release.Name }}-license
      restartPolicy: {{ .Values.restartPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      hostAliases:
      - ip: '127.0.0.1'
        hostnames:
        - 'httpd'
        - 'wildfly'
        - 'postgresql'
